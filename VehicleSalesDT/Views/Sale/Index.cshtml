@model IEnumerable<VehicleSalesDT.Models.Sale>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    if (@ViewData["Message"] != null)
    {
        <div class="text-danger">
            <label>@ViewData["Message"].ToString()</label>
        </div>
    }
}
<h2></h2>
<div class="container">
    <div class="row my-2">
        <div class="col-md-2 py-1">
            <div class="card">
                <div class="card-body">
                    @using (@Html.BeginForm("Index", "Sale", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div>                            
                            <div>
                                <label>Choose file (csv): </label>
                                <input id="postedFile" name="postedFile" type="file" required onchange="return fileValidation()" />
                            </div>
                        </div>
                        <div>
                            <h4></h4>
                        </div>
                        @Html.AntiForgeryToken()
                        <div>
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>                        
                    }                    
                </div>
            </div>
        </div>
        <div class="col-md-10 py-1">
            <div class="card">
                <div class="card-body">
                    @if (@ViewData["MostOftenVehicle"] != null)
                    {
                        if (@ViewData["MostOftenVehicle"].ToString() != "")
                        {
                            <div class="col-sm-offset-2  col-sm-10 p-3 mb-2 bg-info text-white">
                                <h4>Most Often Sold Vehicle:  @ViewData["MostOftenVehicle"]</h4>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-offset-2  col-sm-10">
                                <h2></h2>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-sm-offset-2  col-sm-10">
                            <h2></h2>
                        </div>
                    }                   
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <h4></h4>
</div>
<div class="container">
        <table id="sales" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>DealerNumber</th>
                    <th>CustomerName</th>
                    <th>DealershipName</th>
                    <th>Vehicle</th>
                    <th>Price</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @*@foreach (var sale in Model)
                    {
                        <tr>
                            <td>@sale.DealerNumber</td>
                            <td>@sale.CustomerName</td>
                            <td>@sale.DealershipName</td>
                            <td>@sale.Vehicle</td>
                            <td>@String.Format("CAD {0:C}", @sale.Price)</td>
                            <td>@String.Format("{0:dddd, MMMM d, yyyy}", @sale.SaleDate)</td>
                        </tr>
                    }*@
            </tbody>
        </table>
</div>
<div class="container">
        <div class="row my-3">
            <div class="col">
                <h4>Charts</h4>
            </div>
        </div>
        <div class="row my-2">
            <div class="col-md-6 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLineBar"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLineBar1"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="row my-2" >
            <div class="col-md-12 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLine2"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="row my-2">
            <div class="col-md-12 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLine"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="row my-2">
            <div class="col-md-12 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLine3"></canvas>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="row my-2">
                <div class="col-md-6 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chBar"></canvas>
                        </div>
                    </div>
                </div>
            </div>*@
            @*<div class="row py-2">
                <div class="col-md-4 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chDonut1"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chDonut2"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chDonut3"></canvas>
                        </div>
                    </div>
                </div>
            </div>
                <canvas id="myChart" width="400" height="400"></canvas>*@

    </div>



    @section scripts
    {
        <script>
            function fileValidation() {
                var fileInput = document.getElementById('postedFile');
                var filePath = fileInput.value;
                var allowedExtensions = /(\.csv)$/i;
                if (!allowedExtensions.exec(filePath)) {
                    alert('Please upload file having extensions .csv only.');
                    fileInput.value = '';
                    return false;
                }
                return true;
            }

            function number_format(number, decimals, dec_point, thousands_sep) {
                // *     example: number_format(1234.56, 2, ',', ' ');
                // *     return: '1 234,56'
                number = (number + '').replace(',', '').replace(' ', '');
                var n = !isFinite(+number) ? 0 : +number,
                        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                        sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                        dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                        s = '',
                        toFixedFix = function (n, prec) {
                            var k = Math.pow(10, prec);
                            return '' + Math.round(n * k) / k;
                        };
                // Fix for IE parseFloat(0.55).toFixed(0) = 0;
                s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
                if (s[0].length > 3) {
                    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
                }
                if ((s[1] || '').length < prec) {
                    s[1] = s[1] || '';
                    s[1] += new Array(prec - s[1].length + 1).join('0');
                }
                return s.join(dec);
            }
            $(document).ready(function () {
                // chart colors
                var colors = ['#007bff', '#28a745', '#333333', '#c3e6cb', '#dc3545', '#6c757d'];

                monthlyPricesChart();
                monthlySalesChart();
                dealerSalesChart();
                MonthVehicleSalesChart();
                MonthDealerSalesChart();
                var table = $("#sales").DataTable({
                    //ajax: {
                    //    url: "/api/sale",
                    //    method: "GET",
                    //    dataSrc: ""
                    //},
                    data: @Html.Raw(Json.Encode(ViewData["Sales"])),
                    columns: [
                        {
                            data: "DealerNumber"
                        },
                        {
                            data: "CustomerName"
                        },
                        {
                            data: "DealershipName"
                        },
                        {
                            data: "Vehicle"
                        },
                        {
                            data: "Price",
                            render: function (data) {
                                return data.toLocaleString('en-CAD', { style: 'currency', currency: 'CAD' })
                            }
                        },
                        {
                            data: "SaleDate",
                            //render: function (data) {
                            //    var myDate = new Date(data);

                            //    return myDate.getMonth() + 1 + '/' + myDate.getDate() + '/' + myDate.getFullYear();
                            //}
                            render: function (data) {
                                var re = /-?\d+/;
                                var m = re.exec(data);
                                var myDate = new Date(parseInt(m[0]));
                                myDate=myDate.toLocaleDateString();;
                                return myDate;
                            }
                        },
                    ]
                });

                /* chart.js chart examples */




                /* Bar line chart */
                function monthlyPricesChart() {
                    var Month = [];
                    var Price = [];

                    var data = @Html.Raw(Json.Encode(ViewData["MonthPrice"]));

                    for (var i in data) {
                        Month.push(data[i].Month);
                        Price.push(data[i].Price);
                    }

                    var chartdata = {
                        labels: Month,
                        datasets: [
                            {
                                label: 'Monthly Price',
                                backgroundColor: colors[3],
                                borderColor: colors[0],
                                borderWidth: 4,
                                pointBackgroundColor: colors[0],
                                hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                                hoverBorderColor: 'rgba(200, 200, 200, 1)',
                                data: Price
                            }
                        ]
                    };

                    var ctx = $("#chLineBar");

                    var barGraph = new Chart(ctx, {
                        type: 'bar',
                        data: chartdata,
                        options: {
                            scales: {
                                xAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Month'
                                    }
                                }],
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true,
                                        callback: function (value, index, values) {
                                            return '$ ' + number_format(value);
                                        }
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'CAD $'
                                    }
                                }]
                            }
                        }
                    });
                }


                function monthlySalesChart() {
                    var Month = [];
                    var Sale = [];

                    var data = @Html.Raw(Json.Encode(ViewData["MonthSale"]));

                    for (var i in data) {
                        Month.push(data[i].Month);
                        Sale.push(data[i].NumOfSales);
                    }

                    var chartdata = {
                        labels: Month,
                        datasets: [
                            {
                                label: 'Monthly Sales',
                                backgroundColor: colors[2],
                                borderColor: colors[0],
                                borderWidth: 4,
                                pointBackgroundColor: colors[5],
                                hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                                hoverBorderColor: 'rgba(200, 200, 200, 1)',
                                data: Sale
                            }
                        ]
                    };

                    var ctx = $("#chLineBar1");

                    var barGraph = new Chart(ctx, {
                        type: 'bar',
                        data: chartdata,
                        options: {
                            scales: {
                                xAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Month'
                                    }
                                }],
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true,
                                        fixedStepSize: 1
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Number of Sales'
                                    }
                                }]
                            }
                        }
                    });
                }

                //$.ajax({
                //    url: "/api/MonthSale",
                //    method: "GET",
                //    success: function (data) {
                //        //Do Processing
                //    },
                //    error: function (data) {
                //        console.log(data);
                //    }
                //});

                /* large line chart */
                function dealerSalesChart() {
                    var dealershipName = [];
                    var numOfSales = [];

                    var data = @Html.Raw(Json.Encode(ViewData["DealerSale"]));

                    for (var i in data) {
                        dealershipName.push(data[i].DealershipName);
                        numOfSales.push(data[i].NumofSales);
                    }

                    var chartdata = {
                        labels: dealershipName,
                        datasets: [
                            {
                                label: 'Dealership Sales',
                                backgroundColor: 'transparent',
                                borderColor: colors[0],
                                borderWidth: 4,
                                pointBackgroundColor: colors[0],
                                data: numOfSales
                            }
                        ]
                    };

                    var chLine = $("#chLine");

                    if (chLine) {
                        new Chart(chLine, {
                            type: 'line',
                            data: chartdata,
                            options: {
                                scales: {
                                    xAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Dealership'
                                        }
                                    }],
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            fixedStepSize: 1
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Number of Sales'
                                        }
                                    }]
                                },
                                legend: {
                                    display: true
                                },
                                responsive: true
                            }
                        });
                    }
                }

                //$.ajax({
                //    url: "/api/DealerSale",
                //    method: "GET",
                //    success: function(data){
                //        //process data
                //    },
                //    error: function (data) {
                //        console.log(data);
                //    }
                //});

                //var vehicle = [];

                /* large line chart2 */
                //$.ajax({
                //    url: "/api/Vehicle",
                //    method: "GET",
                //    success: function (data) {
                //        vehicle = data;
                //    },
                //    error: function (data) {
                //        console.log(data);
                //    }
                //});



                /* large line chart2 */
                //$.ajax({
                //    url: "/api/MonthVehicleSale",
                //    method: "GET",
                //    success: function(data){
                //    },
                //    error: function (data) {
                //        console.log(data);
                //    }
                //});

                function MonthVehicleSalesChart() {

                    var chLine2 = $("#chLine2");
                    var chartdata = [];
                    var chartdata = {
                        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov','Dec']
                    };

                    if (chLine2) {
                        var chLineChart = new Chart(chLine2, {
                            type: 'line',
                            data: chartdata,
                            options: {
                                scales: {
                                    xAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Month'
                                        }
                                    }],
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            fixedStepSize: 1
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Number of Sales'
                                        }
                                    }]
                                },
                                legend: {
                                    display: true
                                },
                                responsive: true
                            }
                        });
                        
                        var vehicles = @Html.Raw(Json.Encode(ViewData["Vehicles"]));
                        var vehicleMonthlySales = @Html.Raw(Json.Encode(ViewData["MonthVehicleSale"]));

                        var k = 0;
                        var l = 0;

                        for (var j in vehicles) {
                            var monthId = [];
                            var numOfSales = [];
                            // The original array
                            var numOfSalesInEachMonthPerVehicle = [0,0,0,0,0,0,0,0,0,0,0,0];
                            for (var i in vehicleMonthlySales) {
                                if (vehicleMonthlySales[i].VehicleName == vehicles[j].VehicleName) {
                                    numOfSalesInEachMonthPerVehicle.splice(vehicleMonthlySales[i].MonthId, 1, vehicleMonthlySales[i].NumofSales);
                                }
                            }

                            if (l > 6) {
                                l = 0;
                            }
                            //This is working worked commented code. Pleae use when looping is required.
                            chLineChart.data.datasets.push({
                                label: vehicles[j].VehicleName,
                                backgroundColor: 'transparent',
                                borderColor: colors[l],
                                borderWidth: 4,
                                pointBackgroundColor: colors[l],
                                data: numOfSalesInEachMonthPerVehicle,
                                title: vehicles[j].VehicleName,
                            });
                            k = k + 1;
                            l = l + 1;
                        }
                        chLineChart.update();
                    }
                };

                function MonthDealerSalesChart() {
                    var chLine3 = $("#chLine3");
                    var chartdata = [];
                    var chartdata = {
                        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov','Dec']
                    };

                    if (chLine3) {
                        var chLineChart3 = new Chart(chLine3, {
                            type: 'line',
                            data: chartdata,
                            options: {
                                scales: {
                                    xAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Month'
                                        }
                                    }],
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            fixedStepSize: 1
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Number of Sales'
                                        }
                                    }]
                                },
                                legend: {
                                    display: true
                                },
                                responsive: true
                            }
                        });
                        
                        var dealers = @Html.Raw(Json.Encode(ViewData["Dealers"]));                        
                        var dealerMonthlySales = @Html.Raw(Json.Encode(ViewData["DealerMonthSales"]));

                        var k = 0;
                        var l = 0;

                        for (var j in dealers) {
                            var monthId = [];
                            var numOfSales = [];
                            // The original array
                            var numOfSalesInEachMonthPerDealer = [0,0,0,0,0,0,0,0,0,0,0,0];
                            for (var i in dealerMonthlySales) {
                                if (dealerMonthlySales[i].DealershipName == dealers[j].DealerName) {
                                    numOfSalesInEachMonthPerDealer.splice(dealerMonthlySales[i].MonthId, 1, dealerMonthlySales[i].NumofSales);
                                }
                            }

                            if (l > 6) {
                                l = 0;
                            }
                            chLineChart3.data.datasets.push({
                                label: dealers[j].DealerName,
                                backgroundColor: 'transparent',
                                borderColor: colors[l],
                                borderWidth: 4,
                                pointBackgroundColor: colors[l],
                                data: numOfSalesInEachMonthPerDealer,
                                title: dealers[j].DealerName,
                            });
                            k = k + 1;
                            l = l + 1;
                        }
                        console.log(dealers);
                        console.log(dealerMonthlySales);
                        chLineChart3.update();
                    }
                };
            });
        </script>
    }
