@model IEnumerable<VehicleSalesDT.Models.Sale>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    if (@ViewData["Message"] != null)
    {
        <div class="text-danger">
            <label>@ViewData["Message"].ToString()</label>
        </div>
    }
}
<h2></h2>
<div class="container">
    <div class="row my-2">
        <div class="col-md-2 py-1">
            <div class="card">
                <div class="card-body">
                    @using (@Html.BeginForm("Index", "Sale", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div>
                            
                            <div>
                                <label>Choose file (csv): </label>
                                <input id="postedFile" name="postedFile" type="file" required onchange="return fileValidation()" />
                            </div>
                        </div>
                        <div>
                            <h4></h4>
                        </div>
                        @Html.AntiForgeryToken()
                        <div>
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>                        
                    }                    
                </div>
            </div>
        </div>
        <div class="col-md-10 py-1">
            <div class="card">
                <div class="card-body">
                    @if (@ViewData["MostOftenVehicle"] != null)
                    {
                        if (@ViewData["MostOftenVehicle"].ToString() != "")
                        {
                            <div class="col-sm-offset-2  col-sm-10 p-3 mb-2 bg-info text-white">
                                <h4>Most Often Sold Vehicle:  @ViewData["MostOftenVehicle"]</h4>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-offset-2  col-sm-10">
                                <h2></h2>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-sm-offset-2  col-sm-10">
                            <h2></h2>
                        </div>
                    }                   
                </div>
            </div>
        </div>
    </div>
</div>
   <div>
    <h4></h4>
</div>
    <div class="container">
        <table id="sales" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>DealerNumber</th>
                    <th>CustomerName</th>
                    <th>DealershipName</th>
                    <th>Vehicle</th>
                    <th>Price</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @*@foreach (var sale in Model)
                    {
                        <tr>
                            <td>@sale.DealerNumber</td>
                            <td>@sale.CustomerName</td>
                            <td>@sale.DealershipName</td>
                            <td>@sale.Vehicle</td>
                            <td>@String.Format("CAD {0:C}", @sale.Price)</td>
                            <td>@String.Format("{0:dddd, MMMM d, yyyy}", @sale.SaleDate)</td>
                        </tr>
                    }*@
            </tbody>
        </table>
    </div>

    <div class="container">
        <div class="row my-3">
            <div class="col">
                <h4>Charts</h4>
            </div>
        </div>
        <div class="row my-2">
            <div class="col-md-6 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLineBar"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLine"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="row my-2" >
            <div class="col-md-6 py-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLineBar1"></canvas>
                    </div>
                </div>
            </div>
            @*<div class="col-md-6 py-1" hidden="hidden">
                <div class="card">
                    <div class="card-body">
                        <canvas id="chLine2"></canvas>
                    </div>
                </div>
            </div>*@
        </div>
        @*<div class="row my-2">
                <div class="col-md-6 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chBar"></canvas>
                        </div>
                    </div>
                </div>
            </div>*@
            @*<div class="row py-2">
                <div class="col-md-4 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chDonut1"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chDonut2"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 py-1">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="chDonut3"></canvas>
                        </div>
                    </div>
                </div>
            </div>
                <canvas id="myChart" width="400" height="400"></canvas>*@

    </div>



    @section scripts
{
        <script>
            function fileValidation() {
                var fileInput = document.getElementById('postedFile');
                var filePath = fileInput.value;
                var allowedExtensions = /(\.csv)$/i;
                if (!allowedExtensions.exec(filePath)) {
                    alert('Please upload file having extensions .csv only.');
                    fileInput.value = '';
                    return false;
                }
                return true;
            }

            function number_format(number, decimals, dec_point, thousands_sep) {
                // *     example: number_format(1234.56, 2, ',', ' ');
                // *     return: '1 234,56'
                number = (number + '').replace(',', '').replace(' ', '');
                var n = !isFinite(+number) ? 0 : +number,
                        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                        sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                        dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                        s = '',
                        toFixedFix = function (n, prec) {
                            var k = Math.pow(10, prec);
                            return '' + Math.round(n * k) / k;
                        };
                // Fix for IE parseFloat(0.55).toFixed(0) = 0;
                s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
                if (s[0].length > 3) {
                    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
                }
                if ((s[1] || '').length < prec) {
                    s[1] = s[1] || '';
                    s[1] += new Array(prec - s[1].length + 1).join('0');
                }
                return s.join(dec);
            }
            $(document).ready(function () {                
                var table = $("#sales").DataTable({
                    ajax: {
                        url: "/api/sale",
                        method: "GET",
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "DealerNumber"
                        },
                        {
                            data: "CustomerName"
                        },
                        {
                            data: "DealershipName"
                        },
                        {
                            data: "Vehicle"
                        },
                        {
                            data: "Price",
                            render: function (data) {
                                return data.toLocaleString('en-CAD', { style: 'currency', currency: 'CAD' })
                            }
                        },
                        {
                            data: "SaleDate",
                            render: function (data) {
                                var myDate = new Date(data);

                                return myDate.getMonth() + 1 + '/' + myDate.getDate() + '/' + myDate.getFullYear();
                            }
                        },
                    ]
                });

                /* chart.js chart examples */


                // chart colors
                var colors = ['#007bff', '#28a745', '#333333', '#c3e6cb', '#dc3545', '#6c757d'];

                /* Bar line chart */
                $.ajax({
                    url: "/api/MonthPrice",
                    method: "GET",
                    success: function (data) {
                        var Month = [];
                        var Price = [];

                        for (var i in data) {
                            Month.push(data[i].Month);
                            Price.push(data[i].Price);
                        }

                        var chartdata = {
                            labels: Month,
                            datasets: [
                                {
                                    label: 'Monthly Price',
                                    backgroundColor: colors[3],
                                    borderColor: colors[0],
                                    borderWidth: 4,
                                    pointBackgroundColor: colors[0],
                                    hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                                    hoverBorderColor: 'rgba(200, 200, 200, 1)',
                                    data: Price
                                }
                            ]
                        };

                        var ctx = $("#chLineBar");

                        var barGraph = new Chart(ctx, {
                            type: 'bar',
                            data: chartdata,
                            options: {
                                scales: {
                                    xAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Month'
                                        }
                                    }],
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            callback: function (value, index, values) {
                                                return '$ ' + number_format(value);
                                            }
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'CAD $'
                                        }
                                    }]
                                }
                            }
                        });
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });

                $.ajax({
                    url: "/api/MonthSale",
                    method: "GET",
                    success: function (data) {
                        var Month = [];
                        var Sale = [];

                        for (var i in data) {
                            Month.push(data[i].Month);
                            Sale.push(data[i].NumOfSales);
                        }

                        var chartdata = {
                            labels: Month,
                            datasets: [
                                {
                                    label: 'Monthly Sales',
                                    backgroundColor: colors[2],
                                    borderColor: colors[0],
                                    borderWidth: 4,
                                    pointBackgroundColor: colors[5],
                                    hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                                    hoverBorderColor: 'rgba(200, 200, 200, 1)',
                                    data: Sale
                                }
                            ]
                        };

                        var ctx = $("#chLineBar1");

                        var barGraph = new Chart(ctx, {
                            type: 'bar',
                            data: chartdata,
                            options: {
                                scales: {
                                    xAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Month'
                                        }
                                    }],
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            fixedStepSize: 1
                                        },
                                        scaleLabel: {
                                            display: true,
                                            labelString: 'Number of Sales'
                                        }
                                    }]
                                }
                            }
                        });
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
                /* large line chart */
                $.ajax({
                    url: "/api/DealerSale",
                    method: "GET",
                    success: function (data) {
                        var dealershipName = [];
                        var numOfSales = [];
                        
                        for (var i in data) {
                            dealershipName.push(data[i].DealershipName);
                            numOfSales.push(data[i].NumofSales);
                        }

                        var chartdata = {
                            labels: dealershipName,
                            datasets: [
                                {
                                    label: 'Dealership Sales',
                                    backgroundColor: 'transparent',
                                    borderColor: colors[0],
                                    borderWidth: 4,
                                    pointBackgroundColor: colors[0],
                                    data: numOfSales
                                }
                            ]
                        };

                        var chLine = $("#chLine");

                        if (chLine) {
                            new Chart(chLine, {
                                type: 'line',
                                data: chartdata,
                                options: {
                                    scales: {
                                        xAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            },
                                            scaleLabel: {
                                                display: true,
                                                labelString: 'Dealership'
                                            }
                                        }],
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true,
                                                fixedStepSize: 1
                                            },
                                            scaleLabel: {
                                                display: true,
                                                labelString: 'Number of Sales'
                                            }
                                        }]
                                    },
                                    legend: {
                                        display: true
                                    },
                                    responsive: true
                                }
                            });
                        }
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });

                var vehicle = [];

                /* large line chart2 */
                $.ajax({
                    url: "/api/Vehicle",
                    method: "GET",
                    success: function (data) {
                        vehicle = data;
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });



                /* large line chart2 */
                $.ajax({
                    url: "/api/MonthVehicleSale",
                    method: "GET",
                    success: function (data) {
                        
                        var datasetValue = [];
                        var k = 0;
                        var l = 0;
                        for (var j in vehicle) {
                            var monthName = [];
                            var numOfSales = [];
                            for (var i in data) {
                                if (data[i].VehicleName == vehicle[j].VehicleName) {
                                    monthName.push(data[i].Month);
                                    numOfSales.push(data[i].NumofSales);
                                }
                            }
                            if (l > 6) {
                                l = 0;
                            }

                            datasetValue[k] = {
                                backgroundColor: 'transparent',
                                borderColor: colors[l],
                                borderWidth: 4,
                                pointBackgroundColor: colors[l],
                                title: vehicle[j].VehicleName,
                                data: numOfSales
                            }

                            k = k + 1;
                            l = l + 1;
                            
                        }
                        
                        var chartdata = {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                            //labels: monthName,
                            datasets: [
                                {
                                    data: [10,5,7,9,2,3,6,7,7,9,10,12]
                                },
                                {
                                    data: [4,5,7,9,2,9,1,7,4,9,6,3]
                                }
                            ]
                        };

                        var chLine2 = $("#chLine2");

                        if (chLine2) {
                            new Chart(chLine2, {
                                type: 'line',
                                data: chartdata,
                                options: {
                                    scales: {
                                        xAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    },
                                    legend: {
                                        display: true
                                    },
                                    responsive: true
                                }
                            });
                        }
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });

                /* large pie/donut chart */
                var chPie = document.getElementById("chPie");
                if (chPie) {
                    new Chart(chPie, {
                        type: 'pie',
                        data: {
                            labels: ['Desktop', 'Phone', 'Tablet', 'Unknown'],
                            datasets: [
                                {
                                    backgroundColor: [colors[1], colors[0], colors[2], colors[5]],
                                    borderWidth: 0,
                                    data: [50, 40, 15, 5]
                                }
                            ]
                        },
                        plugins: [{
                            beforeDraw: function (chart) {
                                var width = chart.chart.width,
                                    height = chart.chart.height,
                                    ctx = chart.chart.ctx;
                                ctx.restore();
                                var fontSize = (height / 70).toFixed(2);
                                ctx.font = fontSize + "em sans-serif";
                                ctx.textBaseline = "middle";
                                var text = chart.config.data.datasets[0].data[0] + "%",
                                    textX = Math.round((width - ctx.measureText(text).width) / 2),
                                    textY = height / 2;
                                ctx.fillText(text, textX, textY);
                                ctx.save();
                            }
                        }],
                        options: { layout: { padding: 0 }, legend: { display: false }, cutoutPercentage: 80 }
                    });
                }

                /* bar chart */
                var chBar = document.getElementById("chBar");
                if (chBar) {
                    new Chart(chBar, {
                        type: 'bar',
                        data: {
                            labels: ["S", "M", "T", "W", "T", "F", "S"],
                            datasets: [{
                                data: [589, 445, 483, 503, 689, 692, 634],
                                backgroundColor: colors[0]
                            },
                            {
                                data: [639, 465, 493, 478, 589, 632, 674],
                                backgroundColor: colors[1]
                            }]
                        },
                        options: {
                            legend: {
                                display: false
                            },
                            scales: {
                                xAxes: [{
                                    barPercentage: 0.4,
                                    categoryPercentage: 0.5
                                }]
                            }
                        }
                    });
                }

                /* 3 donut charts */
                var donutOptions = {
                    cutoutPercentage: 85,
                    legend: { position: 'bottom', padding: 5, labels: { pointStyle: 'circle', usePointStyle: true } }
                };

                // donut 1
                var chDonutData1 = {
                    labels: ['Bootstrap', 'Popper', 'Other'],
                    datasets: [
                        {
                            backgroundColor: colors.slice(0, 3),
                            borderWidth: 0,
                            data: [74, 11, 40]
                        }
                    ]
                };

                var chDonut1 = document.getElementById("chDonut1");
                if (chDonut1) {
                    new Chart(chDonut1, {
                        type: 'pie',
                        data: chDonutData1,
                        options: donutOptions
                    });
                }

                // donut 2
                var chDonutData2 = {
                    labels: ['Wips', 'Pops', 'Dags'],
                    datasets: [
                        {
                            backgroundColor: colors.slice(0, 3),
                            borderWidth: 0,
                            data: [40, 45, 30]
                        }
                    ]
                };
                var chDonut2 = document.getElementById("chDonut2");
                if (chDonut2) {
                    new Chart(chDonut2, {
                        type: 'pie',
                        data: chDonutData2,
                        options: donutOptions
                    });
                }

                // donut 3
                var chDonutData3 = {
                    labels: ['Angular', 'React', 'Other'],
                    datasets: [
                        {
                            backgroundColor: colors.slice(0, 3),
                            borderWidth: 0,
                            data: [21, 45, 55, 33]
                        }
                    ]
                };
                var chDonut3 = document.getElementById("chDonut3");
                if (chDonut3) {
                    new Chart(chDonut3, {
                        type: 'pie',
                        data: chDonutData3,
                        options: donutOptions
                    });
                }

                /* 3 line charts */
                var lineOptions = {
                    legend: { display: false },
                    tooltips: { interest: false, bodyFontSize: 11, titleFontSize: 11 },
                    scales: {
                        xAxes: [
                            {
                                ticks: {
                                    display: false
                                },
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                }
                            }
                        ],
                        yAxes: [{ display: false }]
                    },
                    layout: {
                        padding: {
                            left: 6,
                            right: 6,
                            top: 4,
                            bottom: 6
                        }
                    }
                };

                var chLine1 = document.getElementById("chLine1");
                if (chLine1) {
                    new Chart(chLine1, {
                        type: 'line',
                        data: {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],
                            datasets: [
                                {
                                    backgroundColor: '#ffffff',
                                    borderColor: '#ffffff',
                                    data: [10, 11, 4, 11, 4],
                                    fill: false
                                }
                            ]
                        },
                        options: lineOptions
                    });
                }
                var chLine2 = document.getElementById("chLine2");
                if (chLine2) {
                    new Chart(chLine2, {
                        type: 'line',
                        data: {
                            labels: ['A', 'B', 'C', 'D', 'E'],
                            datasets: [
                                {
                                    backgroundColor: '#ffffff',
                                    borderColor: '#ffffff',
                                    data: [4, 5, 7, 13, 12],
                                    fill: false
                                }
                            ]
                        },
                        options: lineOptions
                    });
                }

                var chLine3 = document.getElementById("chLine3");
                if (chLine3) {
                    new Chart(chLine3, {
                        type: 'line',
                        data: {
                            labels: ['Pos', 'Neg', 'Nue', 'Other', 'Unknown'],
                            datasets: [
                                {
                                    backgroundColor: '#ffffff',
                                    borderColor: '#ffffff',
                                    data: [13, 15, 10, 9, 14],
                                    fill: false
                                }
                            ]
                        },
                        options: lineOptions
                    });
                }
            });
        </script>
    }
